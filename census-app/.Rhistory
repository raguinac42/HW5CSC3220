pnorm(-1, 5, 3_)
pnorm(-1, 5, 3)
pnorm((2-5)/3)
c(qnorm((1-.975)/2), qnorm((1+.975)/2))
pnorm(0, 0, 1)
pnorm(-2.3, 0, 1)
pt(1.38, df = Inf)
pnorm(2.17)
pnorm(2.3)-pnorm(-1.3)
1-pnorm(-0.24)
0.09/100
qnorm(9e-04)
qnorm(.75)
qnorm(.999)
pnorm(11,9,3) - pnorm(9,9,3)
37.33/100
qnorm(0.3733, -5.4, 2)
-0.5 + 0.37
qnorm(-0.13, -5, 2)
-0.5-0.37
qnorm(-0.87, -5, 2)
qnorm(0.13, -5, 2)
qnorm(0.13, 5, 2)
qnorm(-0.13, 5, 2)
1-pt(0.7, df = 7)
pt(-2.11, df = 18)
pt(1.7, df = 31) - pt(-0.9, df = 31)
pnorm(91,83,5)
qnorm(0.77, 119, 9)
pnorm(77, 119, 9)
qnorm(0.20, 83, 5)
qnorm(0.13, -5, 2)
pnorm(120, 119, 9)
1-pnorm(120, 119, 9)
pnorm(.20, 83, 5)
qnorm(0.20, 83, 5)
pnorm(28, 25, 2.7)
pt(1.45, df = 4)
pt(1.96, df = 1)
pt(-1.96, df = 10)
pt(1, df = 40) - pt(1, df = 40)
1 - pt(2.3, df = Inf)
0.05/100
qt(0.0005, df = 2)
qt(0.07, df = 7)
qt(0.002, df = 50)
qt(0, df = 27)
qt(0.975, df = Inf)
t = (4.5 - 5)/(1.05/sqrt(29))
pt(t, df = 28)
t = (45 - 50)/(7.25/sqrt(10))
1 - pt(t, df = 9)
t = (20 - 19)/(2.32/sqrt(11))
pt(t, df = 10)
t = (26.28 - 25)/(7.5/sqrt(20))
1 - pt(t, df = 19)
pt(-0.83, df = 10)
1 - pt(-0.83, df = 10)
t = (26.28 - 25)/(7.5/sqrt(20))
2(pt(t, df = 19))
2(pt(0.76, df = 19))
2(pt(-0.76, df = 19))
t = (26.28 - 25)/(7.5/sqrt(20))
pt(t, df = 19) * 2
t = (26.28 - 25)/(7.5/sqrt(20))
pt(t, df = 19)
2*pt(t, df = 19)
pt(-0.19, df = 15)
2*pt(-0.19, df = 15)
t = (26.28 - 25)/(7.5/sqrt(20))
pt(-t, df = 19)
2*pt(-t, df = 19)
q()
confint(model, level=0.95)
q()
627.40 - 100.14
527.26 - 178
349.26 + 198
547.26 + 272
q()
x = c(886, 633, 943, 847, 934, 841, 1193, 820, 774, 834, 1050, 1058, 1192, 975, 1313, 872, 1079, 809)
z = (20 - 22)/(4/sqrt(24))
z
qnorm(0.025)
q()
(20 - 22)/(4/sqrt(24))
qt(0.05, 23)
qt(0.025, 23)
qt(0.05, 31)
q()
install.packages("ISLR")
library(ISLR)
data(Hitters)
attach(Hitters)
fix(Hitters)
sum(AtBat==202)
Hitters[AtBat==202]
fix(Hitters)
sum(AtBat==202)
sum(AtBat==400)
sum(AtBat==401)
Salary[AtBat==202]
fix(Hitters)
q()
install.packages("ISLR")
library(ISLR)
data(ISLR)
data(Hitters)
attach(Hitters)
fix(Hitters)
qnorm(0.975)*143.41/sqrt(length(AtBat))
error = qnorm(0.975)*143.41/sqrt(length(AtBat))
380.9-error
380.9+error
par(mfrow = c(2,2))
plot(lm(Hits~AtBat))
library(MASS)
curve(dnorm(AtBat))
install.packages("ISLR")
library(ISLR)
data(Hitters)
attach(Hitters)
fix(Hitters)
par(mfrow = c(2,2))
plot(AtBat, Hits)
numThing = lm(AtBat ~ Hits)
qqnorm(resid(numThing))
numThing = lm(Hits ~ AtBat)
qqnorm(resid(numThing))
par(mfrow = c(2,2))
plot(AtBat, Hits)
qqnorm(resid(numThing))
plot(resid(numThing), ylab = "Residuals")
hist(resid(numThing), ylab = "Residuals")
lines(density(numThing, col='red', lwd=2))
lines(density(numThing), col='red', lwd=2))
lines(density(numThing), col='red', lwd=2)
res = residuals(numThing)
lines(density(res), col='red', lwd=2)
numThing = lm(AtBat ~ Hits)
res = residuals(numThing)
lines(density(res), col='red', lwd=2)
par(mfrow=c(2,2))
model1 = lm(Hits~AtBat)
res = residuals(model1)
hist(res, freq=F, breaks=15, col="purple")
lines(density(res), col="red", lwd=2)
par(mfrow = c(2,2))
plot(AtBat, Hits)
abline(model1, col="red", lwd=2)
CulmenHat = predict(model1)
plot(CulmenHat, res)
abline(h=0, col="red", lwd=2)
qqnorm(res)
qqline(res, col="red", lwd=2)
hist(res, freq=F, break=15)
hist(res, freq=F, breaks=15)
lines(desity(res), col="red", lwd=2)
lines(density(res), col="red", lwd=2)
a = seq(min(res)-2, max(res)+2, length=1000)
lines(a, dnorm(a, mean(res), sd(res)), col="blue", lwd=2)
summary(model1)
(-10.63 - 0)/(11.69)
c(qt(0.025, length(Hits)-1), qt(0.975, length(Hits)-1))
qt(0.025, 320)
sqrt((160.60/36)+(165.52/30))
help(qnorm)
3.16*-1.97
32 + 280.8
312.8 + 60
372.8 + 170
542.8 + 100
530 - 367
2+3
6/3
(3*8)/(2*3)
log(12)
sqrt(121)
x=7+8
x
a<-c(1.8, 4.5)
b<-c(1+2i, 3-6i)
d<-c(23, 44)
vector("logical", length = 5)
e<-vector("logical", length = 5)
x<-8
x
qt<-c("Time", 24, "October", TRUE, 3.33)
qt
ab<-c(TRUE, 24)
ab
cd<-c(2.5, "May")
cd
my_list<-list(22, "ab", TRUE, 1+2i)
my_list
my_list[[3]]
my_list[3]
my_matrix<-matrix(1:6, nrow=3, ncol=2)
my_matrix[,2]
my_matrix[1,]
age<-c(23, 44, 15, 12, 31, 16)
age
class(age)
dim(age) <- c(2, 3)
age
class(age)
x <- c(1, 2, 3, 4, 5, 6)
y <- c(20, 30, 40, 50, 60, 70)
cbind(x, y)
class(cbind(x, y))
df <- data.frame(name = c("ash", "jane", "paul", "mark"), score = c(67, 56, 87, 91))
df
dim(df)
str(df)
nrow(df)
ncol(df)
N <- 10
if(N * 5 > 40{})
if(N * 5 > 40{print })
if(N * 5 > 40{print("This is easy!")}) else{print("It's not easy!")}
install.packages(ggplot2)
uciCar <- read.table('http://www.win-vector.com/dfiles/car.data.csv', sep = ',', header = T)
uciCar
d <- read.table(paste('http://archive.ics.uci.edu/ml', 'machine-learning-databases/statlog/german/german.data', sep=''), stringsAsFactors = F, header = F)
d <- read.table(paste('http://archive.ics.uci.edu/ml/', 'machine-learning-databases/statlog/german/german.data', sep=''), stringsAsFactors = F, header = F)
print(d[1:3,])
scores = scan()
mean(scores)
data(iris)
summary(iris)
table(iris)
print(iris)
summary(iris(setosa))
help(iris)
scan(21836   25024   25272   26428   24582   22279   27714   28188   25878
26744   25625   24656   21273   25229   22998   27002   25537   24560
30324   26198   27693   22346   30615   26717   30461   26102   18039
21553   19178   26977   25247   24234   17226   22204   25100   22474
26059   21376   27752   26362   22287   22948   27321   30340   20631
25600   28056   28451   26625   24146   25726   23419   23428   21483
25201   24551   20989   27719   27340   24785   27161   24806   24355
22414   32831   21795   25445   23190   30351   23673   30650   22688
27681   22541   21764   21590   25199   30487   21403   23341   25937
26418   20672   23413   27226   26867   19974   27986   21216   21525
22766   26224   22339   29391   22437   28401   26561   24033   25310
26458   29859   20497   24749   25212   22573   22808   27109   26916
21648   21107   25042   31242   29735   23867   30918   21281   31371
29890   23354   28355   28239   24198   22758   27670   25507   31248
21298   22259   28200   21183)
scan()
scan()
salaries
scan(salaries)
help(scan)
scan("", integer())
salaries
salaries <- scan()
salaries
hist(salaries)
hist(salaries, br = 7, col = "lightblue", border = "pink")
hist(salaries)
hist(salaries, br = 7, col = "lightblue", border = "pink")
stem(salaries)
help(stem)
stem(salaries, scale = 2)
stem(islands)
boxplot(salaries)
stem(salaries)
stem(salaries, scale = 2)
boxplot(salaries)
max(salaries)
mean(salaries)
probs = matrix(c(11, 99, 3, 887), 2, 2, byrow = TRUE, dimnames = list(c("M-True", "M-False"), c("C-True", "C-False")))
probs
help(addmargins)
addmargins(probs, c(4,4))
addmargins(probs, c(3,3))
addmargins(probs)
probs
addmargins(probs)
help(tp)
help(tpr)
addmargins(probs)
probs2 = matrix(c(51, 20, 42, 887), 2, 2, byrow = TRUE, dimnames = list(c("M-True", "M-False"), c("C-True", "C-False")))
addmargins(probs2)
library(MASS)
attach(cats)
plot(Hwt~Bwt)
abline(lm(Hwt~Bwt))
cats
plot(Hwt~Sex)
summary(cats)
summary(cats(F))
mean(cats)
7.0
7.4
9.5
7.2
7.3
7.6
8.1
8.2
8.3
8.5
8.7
9.8
7.1
8.7
9.1
9.7
10.9
11.0
7.3
7.9
8.4
9.0
9.0
9.5
9.6
9.7
10.1
10.1
10.6
11.2
6.3
8.7
8.8
10.2
9.0
10.9
8.7
10.1
10.1
8.5
10.2
10.8
9.9
10.1
10.1
10.6
13.0
7.0 + 7.4 + 9.5 + 7.2 + 7.3+7.6+8.1+8.2+8.3+8.5+8.7+9.8+7.1+8.7+9.1+9.7+10.9+11.0+7.3+7.9+8.4+9.0+9.0+9.5+9.6+9.7+10.1+10.1+10.6+11.2+6.3+8.7+8.8+10.2+9.0+10.9+8.7+10.1+10.1+8.5+10.2+10.8+9.9+10.1+10.1+10.6+13.0
432.5/47
6.5+6.5+10.1+7.2+7.6+7.9+8.5+9.1+9.6+9.6+10.7+9.6+7.3+7.9+7.9+9.1+9.3+7.9+8.6+8.8+8.8+9.3+11.0+12.7+12.7+7.7+8.3+9.4+9.4+10.5+11.5+8.0+9.0+9.6+9.6+9.8+10.4+11.1+12.0+12.5+9.1+10.0+10.2+11.4+12.0+13.3+13.5+9.4+10.1+10.6+11.3+11.8+10.0+10.4+10.6+11.6+12.2+12.4+12.7+13.3+13.8+9.9+11.5+12.1+12.5+13.0+14.3+11.6+11.9+12.3+13.0+13.5+13.6+11.5+12.0+14.1+14.9+15.4+11.2+12.2+12.4+12.8+14.4+11.7+12.9+15.6+15.7+17.2+11.8+13.3+14.8+15.0+11.0+14.8+16.8+14.4+20.5
1098.3/97
help(scan)
scan(7)
scan(x, 7)
x <- scan()
y <- scan()
model <- lm(y ~ x)
View(model)
model
plot(x, y, pch=20, col="red", xlab="number New Friends", ylab="Time Spend (seconds)")
coefs<-coef(model)
plot(x, y, pch=20, col="red", xlab="Number New Friends", ylab="Time Spend (seconds)")
coefs<-coef(model)
abline(coefs[1], coefs[2])
summary(model)
install.packages("latticeExtra")
install.packages("latticeExtra")
install.packages("https://cran.r-project.org/src/contrib/Archive/DAAG/DAAG_1.22.1.tar.gz", repos=NULL, type="source")
library(DAAG)
library(lattice)
bwplot(age ~ site | sex, date=possum)
library(DAAG)
library(lattice)
lattice
help(lattice)
help(DAAG)
install.packages(latticeExtras)
install.packages("latticeExtra")
install.packages("https://cran.r-project.org/src/contrib/Archive/DAAG/DAAG_1.22.1.tar.gz", repos=NULL, type="source")
library("DAAG", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
library(DAAG)
library(lattice)
bwplot(age ~ site | sex, data=possum)
par(mfrow=c(1,2), mar=c(3.6, 3.6, 1.6, 0.6))
hist(possum$earconch, main="Possum Earconch")
boxplot(earconch ~ sex, data=possum, boxwex=0.3, horizontal = TRUE)
par(mfrow=c(1,1))
boxplot(earconch ~ sex, data=possum, boxwex=0.3, horizontal = TRUE)
bwplot(sex ~ earconch, data=possum)
boxplot(earconch ~ sex, data=possum, boxwex=0.3, horizontal = TRUE)
par(mfrow=c(1,2))
hist(possum$earconch[possum$sex == "f"], border = "red", main = "")
hist(possum$earconch[possum$sex == "m"], border = "blue", main = "")
library(lattice)
histogram(~ earconch | sex, data=possum)
fden <- density(possum$earconch[possum$sex == "f"])
mden <- density(possum$earconch[possum$sex == "m"])
xlim <- range(c(fden$x, mden$x))
ylim <- range(c(fden$y, mden$y))
plot(fden, col="red", xlim=xlim, ylim=ylim, main = "")
lines(mden, col="blue", lty=2)
library(lattice)
print(densityplot(~earconch, data=possum, groups=sex), main="")
print(histogram(~earconch| sex, data=possum), main="")
fhist <- hist(possum$earconch[possum$sex=="f"], plot=F, breaks=seq(from=40, to=58, by=2))
mhist <- hist(possum$earconch[possum$sex=="m"], plot=F, breaks=seq(from=40, to=58, by=2))
ylim <- range(fhist$density, mhist$density)
plot(fhist, freq=F, xlim=c(40,58), ylim = ylim, border = "red", main="")
lines(mhist, freq=F, border="blue", lty=2)
library(DAAG)
bwplot(sports ~ rcc | sex, data=ais)
library(lattice)
bwplot(sports ~ rcc | sex, data=ais)
bwplot(sport ~ rcc | sex, data=ais)
bwplot(sport ~ hm | sex, data=ais)
bwplot(sport ~ wcc | sex, data=ais)
bwplot(sport ~ hematocrit | sex, data=ais)
bwplot(sport ~ hema | sex, data=ais)
view(ais)
view(sport)
bwplot(sport ~ hc | sex, data=ais)
bwplot(sport ~ hg | sex, data=ais)
bwplot(sport ~ ferr | sex, data=ais)
attach(cuckoohosts)
plot(c(clength, hlength), c(cbreadth, hbreadth), col=rep(1:2, c(12,12)))
plot(c(clength, hlength), c(cbreadth, hbreadth), col=rep(1:2, c(12,12)))
for(i in 1:12)lines(c(clength[i], hlength[i]), c(cbreadth[i], hbreadth[i]))
text(hlength, hbreadth, abbreviate(rownames(cuckoohosts),8))
fossum <- possum[possum$sex=="f", ]
mean(fossum$totlngth)
trimm <- possum[possum$sex=="f", ]
mean(trimm$totlngth)
c(median=median(trimm$totlngth), "trim-mean-0.1"=mean(fossum$totlngth, trim = 0.1))
totlngth <- fossum[, "totlngth"]
plot(density(totlngth), main="")
source("https://bioconductor.org/bioLite.R")
source("http://bioconductor.org/bioLite.R")
source("http://bioconductor.org/biocLite.R")
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install
BiocManager::install(version = "3.10")
y
BiocManager::install(version = "3.10")
source("http://bioconductor.org/biocLite.R")
source("http://bioconductor.org/biocLite.R")
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("GenomicFeatures", "AnnotationDbi"))
source("https://bioconductor.org/biocLite.R")
BiocManager::install()
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
if(!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
pkgs <- rownames(installed.packages())
BiocManager::install(pkgs, type = "source", checkBuilt = TRUE)
source("https://bioconductor.org/biocLite.R")
sudo source("https://bioconductor.org/biocLite.R")
BiocInstaller::biocLite(c("GenomicFeatures", "AnnotationDbi"))
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install()
BiocManager::install(c("GeneFilter"))
BiocManager::install(c("genefilter"))
source("https://bioconductor.org/biocLite.R")
biocLite("genefilter")
library("BiocManager", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.10")
source("https://bioconductor.org/biocLite.R")
library("BiocManager", lib.loc="/Library/Frameworks/R.framework/Versions/3.6/Resources/library")
source("https://bioconductor.org/biocLite.R")
BiocManager::available()
install.packages("readr")
library(readr)
challenge <- read_csv(readr_example("challenge.csv"))
problems(challenge)
challenge <- read_csv(readr_example("challenge.csb"), col_types = cols(x = col_integer(), y = col_character())
challenge <- read_csv(readr_example("challenge.csb"), col_types = cols(x = col_integer(), y = col_character())
challenge <- read_csv(readr_example("challenge.csb"), col_types = cols(x = col_integer(), y = col_character()))
challenge <- read_csv(readr_example("challenge.csv"), col_types = cols(x = col_integer(), y = col_character()))
locale(decimal_mark = ".", grouping_mark = ".")
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
locale(decimal_mark = ".", grouping_mark = ".")
locale(decimal_mark = ",")
locale(grouping_mark = ".")
library(tidyverse)
parse_date("01/02/19", locale = locale(date_format = "%d/%m/%y"))
stocks <- data_frame(year = c(2015, 2015, 2015, 2015, 2016, 2016, 2016), qtr = c(1, 2, 3, 4, 2, 3, 4), return = c(1.88, 0.59, 0.35, NA, 0.92, 0.17, 2.66))
stocks
stocks %>%
spread(year, return)
stocks %>%
spread(qtr, return)
stocks %>%
spread(qtr, return) %>%
gather('2015':'2016', key = "qtr", value = "return")
stocks %>%
spread(qtr, return) %>%
gather('1':'2':'3':'4', key = "qtr", value = "return")
stocks %>%
spread(year, return) %>%
gather('2015':'2016', key = "year", value = "return")
stocks %>%
complete(year, qtr)
stocks %>%
spread(year, return)
setwd("~/Downloads")
setwd("~/Downloads/census-app")
runApp()
shiny::runApp()
runApp()
